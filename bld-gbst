#! /bin/bash
# Quick script to do a complete build for the bt-test
#   testing program
#
#    Copyright (C) 2022  George Ganoe
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License along
#    with this program; if not, write to the Free Software Foundation, Inc.,
#    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#

origFldr=$PWD
userNm=${HOME##*/}
bdate=$(date +%Y%m%d)

if [ -d "gbtree" -o -d "uni-utils" ]; then
    baseFldr=$origFldr
else
    baseFldr=${origFldr%/gbtree*}
    if [ "$baseFldr" == "$origFldr" ]; then
        baseFldr=${origFldr%/uni-utils*}
        if [ "$baseFldr" == "$origFldr" ]; then
            echo "Can not find the gbtree or uni-utils folders in the path, "
            echo "so exiting with error indicated."
            exit 1
        fi
    fi
fi
echo "origFldr is $origFldr and baseFldr is $baseFldr"

cd $baseFldr

getout () {
    echo "The executing process failed stopping here"
    exit 1
}

# The libfoutil.a library, if it exists, needs to be deleted as it can
#   cause a number of confusing build error messages when building a
#   checked out commit that is different enough from the previous build.
if [ -d "lib" ]; then
    if [ -f lib/libbtutil.a ]; then
        rm lib/libbtutil.a
        echo "file lib/libbtutil.a deleted and will be re-built."
    else
        echo "file lib/libbtutil.a was not found and will be built."
    fi
else
    echo -n "The lib folder did not exist but will be created, then "
    echo "the library lib/libbtutil.a will be built."
    mkdir lib
fi

mod_compile () {
    onams=""
    for fname in $flist; do
        cmpcmd="g++ -O2 -Wall -std=c++17 -c $fname.cc"
        echo "Running compiler $cmpcmd in $PWD"
        $cmpcmd || getout
        if [ ${#onams} -gt 1 ]; then
            onams=$onams" $fname.o"
        else
            onams="$fname.o"
        fi
        if [ ${#onams} -gt 32 ]; then
            echo "Updating the library ar -Prs ../lib/libbtutil.a $onams in $PWD"
            ar -Prs ../lib/libbtutil.a $onams
            onams=""
        fi
    done
    if [ ${#onams} -gt 1 ]; then
        echo "Updating the library ar -Prs ../lib/libbtutil.a $onams in $PWD"
        ar -Prs ../lib/libbtutil.a $onams
        onams=""
    fi
}

cd uni-utils
flist="hex-symbol uni-utils"
mod_compile

cd $baseFldr/gbtree
flist="gbst-iface hash-rcrd-type utf8-rcrd-type gbtree utf8-name-store"
flist+=" fo-utils ncursio btree-graph-class heap-mon-util"
mod_compile

echo "Running compiler in $PWD to build executable:"
echo "g++ -O2 -Wall -std=c++17 -o gbst-test gbst-test.cc -L ../lib -lbtutil -lncursesw -lcrypto"
g++ -O2 -Wall -std=c++17 -o gbst-test gbst-test.cc -L ../lib -lbtutil -lncursesw -lcrypto

cd $baseFldr
